2001/05/20	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Imported from BackStage Branch;
	  * New internal architecture - free capturing size and scaling.
	  * New option "-size" "-geometry" "-scale" were added. "-double" and
	    "-hireso" were removed.
	  * Various pixel format support.
	  * Autoplay mode (EXPERIMENTAL)
	  * Video loop back support was enhanced (EXPERIMENTAL). Now EffecTV can
	    be chained!
	  * Horizontal flipping (TAB key)
	  * ALT+Enter for fullscreen mode toggle.
	  * Many bugfixes.
	* Okay, NEW EFFECT!
	  NoiseTV, AgingTV, TransFromTV, LifeTV, SparkTV, WarpTV, HolographicTV.
	  (StrobeTV and ThreadTV in BackStageBranch coming soon!)
	* Changed version to 0.2.99.

2001/03/27	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Many feature enhancements from BackStage Branch;
	  * New effects: EdgeTV and ShagadelicTV.
	  * Video loop back device support.
	  * All effects are changed to use 320x240xRGB32 mode. Many USB cam now
	    work fine.
	  * New option "-hireso" was added.
	* Changed version to 0.2.0.

2001/03/19	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Changed version to 0.1.6. Many feature enhancement from BackStage Branch;
	  * Merged TV tuning support from Matthias Kleinmann
	  * New Effect: SpiralTV (Sam Mertens)
	  * BaltanTV and StreakTV exchanged their names.
	  * EffecTV.h: added new macro variables SCREEN_AREA and PIXEL_SIZE
		(suggested from Sam Mertens)

2001/03/14	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* effects/1d.c: did not handle state in Start() and Stop().

2001/03/02	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Changed version to 0.1.5.

2001/03/01	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* effects/blurzoom.c: cleaned the code up.

2001/02/27	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* effects/simura.c: minor bugfixes.

2001/02/25	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* New effect: SimuraTV

2001/02/23	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* global variable "videoinfo" is renamed to "screeninfo" to avoid
	  confusion.

2001/02/21	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Some global variables for screen setting are move to screen.c

2001/02/20	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* REAME is renamed to README. (ashamed)
	* New flags is added: fullscreen, doublebuf, hwsurface.
	  Especially, doublebuf is important for effects coders.
	* New function screen_clear() is added.
	* effects/1d.c, dot.c, fire.c, predator.c;
	  Bugs on doublebuffering mode have been fixed.
	* Changed version to 0.1.4
	* Fixed the bug that wrong message "Fullscreen mode is not supported."
	  had been shown even when fullscreen option was not set.

2001/02/20	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* array phasetable[] is eliminated from quark.c. That was completely
	  meaningless.

2001/02/18	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* New function videox_getnorm() in video.c
	* New options "-norm" is added.

2001/02/18	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Changed version to 0.1.3
	* Changed default norm to NTSC

2001/02/18	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* New effect PredatorTV
	* New YUV utility modules.

2001/02/17	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* effects/puzzle.c
	  Shuffling routine is revised.

2001/02/16	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* New effect PuzzleTV

2001/02/16	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* SDL_WM_SetCaption() is replaced by screen_setcaption() in main.c
	  screen_setcaption() calls SDL_WM_SetCaption() only when window manager
	  feature is available.

2001/02/15	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Double scaled BurnTV now uses addition with saturation.
	* MosaicTV is added.
	* changed version to 0.1.2

2001/02/15	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Fixed the bugs in usage and README.

2001/02/14	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* blurzoom.c didn't handle variable stat.

2001/02/14	FUKUCHI Kentarou	<fukuchi@is.titech.ac.jp>
	* Now effects uses a shared buffer for temporary frame buffer.
	  But the effects uses large amount buffer(QuarkTV, BaltanTV, StreakTV)
	  alloctes buffers by themselves.
	* Return values of xxxStart() and xxxDraw() are handled. When they
	  failed, drawErrorPattern() is called.(currently it only fill the screen
	  in blank)
